#include <string>

using namespace std;

int Z[10000];
int r[10000];
int l[10000];

void compZ(string s)
{
  int indn = 1;
  int indp = 0;
  int m = s.size();

  while (indn < m && s[indn] == s[indp])
  {
    indn++;
	indp++;
  }

  int rr = indp;
  int ll = 1;

  Z[1] = indp;
  r[1] = indp;
  l[1] = 1;

  indn=2;
  indp=0;

  int k = 2;
  while (k < m)
  {
    if (k > rr)
	{
       indn=k;
	   indp=0;
       while (indn < m && s[indn] == s[indp])
       {
         indn++;
	     indp++;
       }
	   Z[k]=indp;
	   r[k]=indp;
	   l[k]=k;
	   rr=r[k];
	   ll=l[k];
	}
	else
	{
      int k1 = k - ll + 1;
	  int b  = abs(rr - k + 1);
	  if (Z[k1] < b)
	  {
        Z[k] = Z[k1];
		r[k]=rr;
		l[k]=ll;
	  }
	  else
	  {
        indn=rr+1;
	    indp=b+1;
        while (indn < m && s[indn] == s[indp])
        {
          indn++;
	      indp++;
        }
		Z[k]=indn-k;
		r[k]=indn-1;
		l[k]=k;
		rr=r[k];
		ll=l[k];
	  }
	}
	k++;
  }
}

int main()
{
  string a = "ABC ABCDAB ABCDABCDABDE";
  string b = "ABCDABD";

  string c = b + "#" + a;

  memset(Z, 0, sizeof(Z));
  memset(r, 0, sizeof(r));
  memset(l, 0, sizeof(l));

  compZ(c); 
  int k = 0;
  for (int i=b.size()+1; i<c.size(); i++)
  {
    if (Z[i] == b.size())
     k = i - (b.size() + 1);
  }

  return 0;
}
