bool vis[8][8];
int comp[8][8];

string s[8];
int curcomp;

void dfs(int i, int j)
{
   if (vis[i][j])
	   return;
   vis[i][j]=true;
   comp[i][j]=curcomp;

   if (i > 0 && s[i-1][j] == '1')
	   dfs(i-1,j);
   if (i < 7 && s[i+1][j] == '1')
	   dfs(i+1,j);
   if (j > 0 && s[i][j-1] == '1')
	   dfs(i,j-1);
   if (j < 7 && s[i][j+1] == '1')
	   dfs(i,j+1);
}


main ()
{

	 for (int i=0; i<8; i++)
	   fin >> s[i];

	 memset(vis, false, sizeof(vis));
	 memset(comp, 0, sizeof(comp));

	 curcomp = 0;
	 for (int i=0; i<8; i++)
	 {
        for (int j=0; j<8; j++)
		{
            if (s[i][j] == '1' && !vis[i][j])
			{
				curcomp++;
				dfs(i,j);
			}
		}
	 }
}
